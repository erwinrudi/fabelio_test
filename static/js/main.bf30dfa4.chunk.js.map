{"version":3,"sources":["AppCtrl.js","App.js","serviceWorker.js","index.js"],"names":["AppCtrl","element","_this","this","state","isLoading","setState","axios","get","then","response","general","Object","assign","furnitureStyle","productList","productListAll","data","furniture_styles","products","catch","error","console","log","React","Component","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","App","handleClickClear","search","deliveryTime","value","text","Ctrl","getApi","searchParam","flaggingSearch","isSearchName","isSearchFurniture","isSearchDelivery","name","toLowerCase","includes","length","furniture_style","map","datas","delivery_time","property","event","target","product","i","productSelect","searchData","push","description","substring","result","x","tempResult","find","Fragment","tag","blocking","padding","Grid","container","spacing","item","xs","FormControl","InputLabel","Input","type","onChange","handleChange","bind","endAdornment","InputAdornment","position","IconButton","onClick","Clear","marginBottom","fullWidth","Select","labelId","id","multiple","input","renderValue","selected","join","index","MenuItem","key","Checkbox","checked","indexOf","ListItemText","primary","selectedSelect","sm","Card","CardContent","minHeigt","fontWeight","textAlign","color","price","displayType","thousandSeparator","prefix","marginTop","cutProductDescription","textDecoration","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bf30dfa4.chunk.js","sourcesContent":["'use strict';\r\nimport axios from 'axios'\r\nimport React from 'react';\r\n\r\nexport default class AppCtrl extends React.Component {\r\n    constructor(element) {\r\n        super();\r\n        this.element = element;\r\n    }\r\n\r\n    getApi() {\r\n        const _this = this;\r\n        let isLoading = _this.element.state.isLoading\r\n        isLoading = true\r\n        _this.element.setState({ isLoading })\r\n        axios.get('https://www.mocky.io/v2/5c9105cb330000112b649af8,')\r\n            .then(function (response) {\r\n                let general = Object.assign({}, _this.element.state)\r\n                var furnitureStyle = general.furnitureStyle\r\n                var productList = general.productList\r\n                var isLoading = general.isLoading\r\n                var productListAll = general.productListAll\r\n                let data = response.data\r\n                furnitureStyle = data.furniture_styles\r\n                productList = data.products\r\n                productListAll = productList\r\n                isLoading = false\r\n                _this.element.setState({ furnitureStyle, productList, isLoading, productListAll })\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport { Input, FormControl, Select, MenuItem, Checkbox, ListItemText, InputLabel, InputAdornment, IconButton, Grid, Card, CardContent } from '@material-ui/core';\nimport AppCtrl from './AppCtrl.js';\nimport BlockUi from 'react-block-ui';\nimport 'react-block-ui/style.css';\nimport { Clear } from '@material-ui/icons';\nimport NumberFormat from 'react-number-format';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: false,\n      furnitureStyle: [],\n      productList: [],\n      productListAll: [],\n      deliveryTime: [\n        {\n          value: 7,\n          text: \"1 Week\"\n        },\n        {\n          value: 14,\n          text: \"2 Week\"\n        },\n        {\n          value: 30,\n          text: \"1 Month\"\n        },\n        {\n          value: 9999,\n          text: \"More Than 1 Month\"\n        }\n      ],\n      search: {\n        text: '',\n        furnitureStyle: [],\n        deliveryTime: []\n      }\n    }\n    this.Ctrl = new AppCtrl(this)\n  }\n\n\n\n  componentDidMount() {\n    this.Ctrl.getApi();\n  }\n\n  searchData(searchParam, data) {\n    var flaggingSearch = {\n      isSearchName: false,\n      isSearchFurniture: false,\n      isSearchDelivery: false\n    }\n\n    if (searchParam.text != \"\") {\n      if (data.name.toLowerCase().includes(searchParam.text.toLowerCase())) {\n        flaggingSearch.isSearchName = true\n      }\n    }\n    if (searchParam.text == \"\") {\n      flaggingSearch.isSearchName = true\n    }\n\n    if (searchParam.furnitureStyle.length != 0) {\n      data.furniture_style.map(datas => {\n        searchParam.furnitureStyle.map(search => {\n          if (search == datas) {\n            flaggingSearch.isSearchFurniture = true\n          }\n        })\n      })\n    }\n    if (searchParam.furnitureStyle.length == 0) {\n      flaggingSearch.isSearchFurniture = true\n    }\n\n    if (searchParam.deliveryTime.length != 0) {\n      searchParam.deliveryTime.map(search => {\n        if (search >= data.delivery_time) {\n          flaggingSearch.isSearchDelivery = true\n        }\n      })\n    }\n\n    if (searchParam.deliveryTime.length == 0) {\n      flaggingSearch.isSearchDelivery = true\n    }\n\n\n    if (flaggingSearch.isSearchFurniture && flaggingSearch.isSearchName && flaggingSearch.isSearchDelivery) {\n      return true\n    }\n    return false\n  }\n\n  handleChange(property, event) {\n    var value = event.target.value\n    let search = this.state.search\n    let product = this.state.productListAll\n    let productList = this.state.productList\n    productList = []\n    search[property] = value\n    this.setState({ search })\n\n    for (var i = 0; i < product.length; i++) {\n      var productSelect = product[i]\n      if (this.searchData(search, productSelect)) {\n        productList.push(productSelect)\n      }\n    }\n    this.setState({ productList })\n  }\n\n  handleClickClear = () => {\n    let search = this.state.search\n    search['text'] = ''\n    this.setState({ search })\n  };\n\n  componentDidUpdate() {\n  }\n\n  cutProductDescription(description) {\n    if (description.length <= 114) {\n      return description\n    }\n    else {\n      var value = description.substring(0, 111)\n      value = value + \"...\"\n      return value\n    }\n  }\n\n  selectedSelect(value) {\n    let result = \"\"\n    value.map(x => {\n      let tempResult = this.state.deliveryTime.find(deliveryTime => deliveryTime.value == x);\n      // debugger\n      result = result + tempResult.text + \", \"\n    })\n\n    return result\n  }\n\n  render() {\n    let { isLoading, furnitureStyle, productList, deliveryTime, search } = this.state\n\n    return (\n      <React.Fragment>\n        <div>\n          <BlockUi tag=\"div\" blocking={isLoading}>\n            <div style={{\n              padding: '30px'\n            }}>\n              <Grid container spacing={3}>\n                <Grid item xs={12}>\n                  <FormControl >\n                    <InputLabel >Search Furniture</InputLabel>\n                    <Input\n                      type='text'\n                      value={search.text}\n                      onChange={this.handleChange.bind(this, 'text')}\n                      endAdornment={\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            onClick={this.handleClickClear}\n                          >\n                            <Clear />\n                          </IconButton>\n                        </InputAdornment>\n                      }\n                    />\n                  </FormControl>\n                </Grid>\n              </Grid>\n              <Grid container spacing={3} style={{ marginBottom: '20px' }}>\n                <Grid item xs={6}>\n                  <FormControl fullWidth={true}>\n                    <InputLabel >Tag</InputLabel>\n                    <Select\n                      labelId=\"demo-mutiple-checkbox-label\"\n                      id=\"demo-mutiple-checkbox\"\n                      multiple\n                      value={search.furnitureStyle}\n                      onChange={this.handleChange.bind(this, 'furnitureStyle')}\n                      input={<Input />}\n                      renderValue={selected => selected.join(', ')}\n                      MenuProps={MenuProps}\n                    >\n                      {furnitureStyle.map((x, index) => (\n                        <MenuItem key={index} value={x}>\n                          <Checkbox checked={search.furnitureStyle.indexOf(x) > -1} />\n                          <ListItemText primary={x} />\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={6} >\n                  <FormControl fullWidth={true}>\n                    <InputLabel >Delivery Time</InputLabel>\n                    <Select\n                      labelId=\"demo-mutiple-checkbox-label\"\n                      id=\"demo-mutiple-checkbox\"\n                      multiple\n                      value={search.deliveryTime}\n                      onChange={this.handleChange.bind(this, 'deliveryTime')}\n                      input={<Input />}\n                      renderValue={selected => (\n                        this.selectedSelect(selected)\n                      )}\n                      MenuProps={MenuProps}\n                    >\n                      {deliveryTime.map(x => (\n                        <MenuItem key={x.value} value={x.value}>\n                          <Checkbox checked={search.deliveryTime.indexOf(x.value) > -1} />\n                          <ListItemText primary={x.text} />\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n              </Grid>\n              <Grid container spacing={2}>\n                {productList.map(product => (\n                  <Grid item xs={12} sm={6}>\n                    <Card>\n                      <CardContent style={{\n                        minHeigt: '100px',\n                        padding: '10px'\n                      }}>\n                        {/* <Paper  elevation={3} > */}\n                        <Grid container>\n                          <Grid style={{ fontWeight: '600' }} item xs={7}>{product.name}</Grid>\n                          <Grid style={{ textAlign: 'right', fontWeight: '400', color: 'orange' }} item xs={5}>\n                            <NumberFormat\n                              value={product.price}\n                              displayType=\"text\"\n                              thousandSeparator\n                              prefix=\"Rp. \"\n                            />\n                          </Grid>\n                          <Grid style={{ marginTop: '10px' }} item xs={12}>\n                            {this.cutProductDescription(product.description)}\n                          </Grid>\n                          <Grid style={{ marginTop: '10px' }} item xs={12}>\n                            {product.furniture_style.map(x => {\n                              return x + \" \"\n                            })}\n                          </Grid>\n                          <Grid style={{ textAlign: 'right', marginTop: '20px', color: 'blue', fontWeight: '500', textDecoration: 'underline' }} item xs={12}>{product.delivery_time} Days</Grid>\n                        </Grid>\n                        {/* </Paper> */}\n                      </CardContent>\n                    </Card>\n                  </Grid>\n                ))}\n\n              </Grid>\n            </div>\n          </BlockUi>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}